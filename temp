import { Component } from '@angular/core';
import { ActivatedRoute, NavigationEnd, Router } from '@angular/router';
import { Title } from '@angular/platform-browser';
import { filter, map, mergeMap } from 'rxjs/operators';

@Component({
  selector: 'app-root',
  templateUrl: './app.component.html'
})
export class AppComponent {
  constructor(
    private router: Router,
    private activatedRoute: ActivatedRoute,
    private titleService: Title
  ) {
    this.setDynamicTitle();
  }

  setDynamicTitle() {
    this.router.events.pipe(
      filter(event => event instanceof NavigationEnd),
      map(() => {
        let route = this.activatedRoute;
        while (route.firstChild) {
          route = route.firstChild;
        }
        return route;
      }),
      mergeMap(route => route.data)
    ).subscribe(data => {
      const baseTitle = data['title'] || 'App';

      // Get reportId from route params if it exists
      let reportId: string | undefined;
      let route = this.activatedRoute;
      while (route.firstChild) {
        route = route.firstChild;
      }
      route.params.subscribe(params => {
        reportId = params['reportId'];
        const fullTitle = reportId ? `${baseTitle} - ${reportId}` : baseTitle;
        this.titleService.setTitle(fullTitle);
      });
    });
  }
}
